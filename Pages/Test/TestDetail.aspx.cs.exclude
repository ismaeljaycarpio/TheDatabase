using System;
using System.Collections.Generic;
//using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using System.Configuration;
public partial class Pages_Test_TestDetail : SecurePage
{

    string _strActionMode = "view";
    int? _iSampleTypeGroupID;
    string _qsMode = "";
    string _qsSampleTypeGroupID = "";
    protected void Page_Load(object sender, EventArgs e)
    {
        int iTemp = 0;
        // checking action mode
       
        if (Request.QueryString["mode"] == null)
        {
            Server.Transfer("~/Default.aspx");
        }
        else
        {
            _qsMode = Cryptography.Decrypt(Request.QueryString["mode"]);

            if (_qsMode == "add" ||
                _qsMode == "view" ||
                _qsMode == "edit")
            {
                _strActionMode = _qsMode;

                if (Request.QueryString["SampleTypeGroupID"] != null)
                {
                    _qsSampleTypeGroupID = Cryptography.Decrypt(Request.QueryString["SampleTypeGroupID"]);
                    _iSampleTypeGroupID = int.Parse(_qsSampleTypeGroupID);
                }

            }
            else
            {
                Server.Transfer("~/Default.aspx");
            }


        }
        Title = "Test - " + _strActionMode;
        lblTitle.Text = "Test - " + _strActionMode;


        // checking permission


        if (!IsPostBack)
        {
            if (!Common.HaveAccess(Session["roletype"].ToString(), "1"))
            { Response.Redirect("~/Default.aspx", false); }
            //lblTitle.Text = Title;
            PopulateAccountDDL();            
        }

        switch (_strActionMode.ToLower())
        {
            case "add":


                break;

            case "view":



                
                PopulateTheRecord();         

                EnableTheRecordControls(false);
                //cmdSave.Visible = false;
                divSave.Visible = false;

                break;

            case "edit":

                if (!IsPostBack)
                {
                    PopulateTheRecord();
                }
                break;


            default:
                //?

                break;
        }




    }

    protected void PopulateAccountDDL()
    {
        int iTemp = 0;
        ddlAccount.DataSource = SecurityManager.Account_Select(null, string.Empty, null, null, "AccountID", "ASC", null, null, ref iTemp);
        ddlAccount.DataBind();
    }

   
    protected void PopulateTheRecord()
    {
        try
        {
            int iTemp = 0;
            List<SampleTypeGroup> listSampleTypeGroup = SecurityManager.test_TestTable_Select(_iSampleTypeGroupID, "", null, null, "SampleTypeGroupID", "ASC", null, null, ref iTemp);

            SampleTypeGroup theSampleTypeGroup = listSampleTypeGroup[0];

            txtSampleTypeGroup.Text = theSampleTypeGroup.SampleTypeGroupP;
            chkShowOnMenu.Checked = (bool)theSampleTypeGroup.ShowOnMenu;
            ddlAccount.Text = theSampleTypeGroup.AccountID.ToString();
            if (_strActionMode == "edit")
            {
                ViewState["theSampleTypeGroup"] = theSampleTypeGroup;
            }
        }
        catch (Exception ex)
        {
            ErrorLog theErrorLog = new ErrorLog(null, "Test Detail", ex.Message, ex.StackTrace, DateTime.Now, Request.Path);
            SystemData.ErrorLog_Insert(theErrorLog);
            lblMsg.Text = ex.Message;
        }

    }
    

    protected void EnableTheRecordControls(bool p_bEnable)
    {        
        txtSampleTypeGroup.Enabled = p_bEnable;
        chkShowOnMenu.Enabled = p_bEnable;
        ddlAccount.Enabled = p_bEnable;       

    }

    protected bool IsUserInputOK()
    {
        //this is the final server side vaidation before database action


        return true;
    }



    //protected void cmdSave_Click(object sender, ImageClickEventArgs e)
    protected void lnkSave_Click(object sender, EventArgs e)
    {
        try
        {
            if (IsUserInputOK())
            {

                switch (_strActionMode.ToLower())
                {
                    case "add":

                        SampleTypeGroup newSampleTypeGroup = new SampleTypeGroup(null, txtSampleTypeGroup.Text, int.Parse(ddlAccount.SelectedValue), chkShowOnMenu.Checked, "");
                        SecurityManager.test_TestTable_Insert(newSampleTypeGroup);

                        break;

                    case "view":


                        break;

                    case "edit":
                        SampleTypeGroup editSampleTypeGroup = (SampleTypeGroup)ViewState["theSampleTypeGroup"];

                        editSampleTypeGroup.SampleTypeGroupP = txtSampleTypeGroup.Text;
                        editSampleTypeGroup.ShowOnMenu = chkShowOnMenu.Checked;
                        editSampleTypeGroup.AccountID = int.Parse(ddlAccount.SelectedValue);

                        int iIsUpdated = SecurityManager.test_TestTable_Update(editSampleTypeGroup);

                        break;

                    default:
                        //?
                        break;
                }
            }
            else
            {
                //user input is not ok

            }

            Response.Redirect(Request.Url.Scheme +"://" + Request.Url.Authority + Request.ApplicationPath + "/Pages/Test/TestList.aspx", false);

        }
        catch (Exception ex)
        {
            ErrorLog theErrorLog = new ErrorLog(null, "Test Detail", ex.Message, ex.StackTrace, DateTime.Now, Request.Path);
            SystemData.ErrorLog_Insert(theErrorLog);
            lblMsg.Text = ex.Message;
        }



    }
    //protected void cmdBack_Click(object sender, ImageClickEventArgs e)
    //{
    //    Response.Redirect(Request.Url.Scheme +"://" + Request.Url.Authority + Request.ApplicationPath + "/Pages/Test/TestList.aspx", false);
    //}
    protected void lnkBack_Click(object sender, EventArgs e)
    {
        Response.Redirect(Request.Url.Scheme +"://" + Request.Url.Authority + Request.ApplicationPath + "/Pages/Test/TestList.aspx", false);
    }
    //protected void lnkSave_Click(object sender, EventArgs e)
    //{

    //}
}
